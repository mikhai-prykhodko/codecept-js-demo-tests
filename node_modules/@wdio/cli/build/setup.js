"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = setup;

require("source-map-support/register");

var _fs = _interopRequireDefault(require("fs"));

var _ejs = _interopRequireDefault(require("ejs"));

var _path = _interopRequireDefault(require("path"));

var _inquirer = _interopRequireDefault(require("inquirer"));

var _npmInstallPackage = _interopRequireDefault(require("npm-install-package"));

var _config = require("./config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function setup() {
  console.log(_config.CONFIG_HELPER_INTRO); // eslint-disable-line no-console

  _inquirer.default.prompt(_config.QUESTIONNAIRE).then(answers => {
    let packagesToInstall = [];

    if (answers.installRunner) {
      packagesToInstall.push(`@wdio/${answers.runner}-runner`);
    }

    if (answers.installFramework) {
      packagesToInstall.push(`@wdio/${answers.framework}-framework`);
    }

    if (answers.installReporter) {
      packagesToInstall = packagesToInstall.concat(answers.reporters);
    }

    if (answers.installServices) {
      packagesToInstall = packagesToInstall.concat(answers.services);
    }

    if (answers.executionMode === 'sync') {
      packagesToInstall.push('@wdio/sync');
    }

    if (packagesToInstall.length > 0) {
      console.log('\nInstalling wdio packages:\n-', packagesToInstall.join('\n- ')); // eslint-disable-line no-console

      return (0, _npmInstallPackage.default)(packagesToInstall, {
        saveDev: true
      }, err => {
        if (err) {
          throw err;
        }

        console.log('\nPackages installed successfully, creating configuration file...'); // eslint-disable-line no-console

        renderConfigurationFile(answers);
      });
    }

    renderConfigurationFile(answers);
    process.exit(0);
  });
}

function renderConfigurationFile(answers) {
  let tpl = _fs.default.readFileSync(_path.default.join(__dirname, '/templates/wdio.conf.tpl.ejs'), 'utf8');

  let renderedTpl = _ejs.default.render(tpl, {
    answers
  });

  _fs.default.writeFileSync(_path.default.join(process.cwd(), 'wdio.conf.js'), renderedTpl);

  console.log(_config.CONFIG_HELPER_SUCCESS_MESSAGE); // eslint-disable-line no-console
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXR1cC5qcyJdLCJuYW1lcyI6WyJzZXR1cCIsImNvbnNvbGUiLCJsb2ciLCJDT05GSUdfSEVMUEVSX0lOVFJPIiwiaW5xdWlyZXIiLCJwcm9tcHQiLCJRVUVTVElPTk5BSVJFIiwidGhlbiIsImFuc3dlcnMiLCJwYWNrYWdlc1RvSW5zdGFsbCIsImluc3RhbGxSdW5uZXIiLCJwdXNoIiwicnVubmVyIiwiaW5zdGFsbEZyYW1ld29yayIsImZyYW1ld29yayIsImluc3RhbGxSZXBvcnRlciIsImNvbmNhdCIsInJlcG9ydGVycyIsImluc3RhbGxTZXJ2aWNlcyIsInNlcnZpY2VzIiwiZXhlY3V0aW9uTW9kZSIsImxlbmd0aCIsImpvaW4iLCJzYXZlRGV2IiwiZXJyIiwicmVuZGVyQ29uZmlndXJhdGlvbkZpbGUiLCJwcm9jZXNzIiwiZXhpdCIsInRwbCIsImZzIiwicmVhZEZpbGVTeW5jIiwicGF0aCIsIl9fZGlybmFtZSIsInJlbmRlcmVkVHBsIiwiZWpzIiwicmVuZGVyIiwid3JpdGVGaWxlU3luYyIsImN3ZCIsIkNPTkZJR19IRUxQRVJfU1VDQ0VTU19NRVNTQUdFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7OztBQUVlLFNBQVNBLEtBQVQsR0FBa0I7QUFDN0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQywyQkFBWixFQUQ2QixDQUNJOztBQUNqQ0Msb0JBQVNDLE1BQVQsQ0FBZ0JDLHFCQUFoQixFQUErQkMsSUFBL0IsQ0FBcUNDLE9BQUQsSUFBYTtBQUM3QyxRQUFJQyxpQkFBaUIsR0FBRyxFQUF4Qjs7QUFDQSxRQUFJRCxPQUFPLENBQUNFLGFBQVosRUFBMkI7QUFDdkJELE1BQUFBLGlCQUFpQixDQUFDRSxJQUFsQixDQUF3QixTQUFRSCxPQUFPLENBQUNJLE1BQU8sU0FBL0M7QUFDSDs7QUFDRCxRQUFJSixPQUFPLENBQUNLLGdCQUFaLEVBQThCO0FBQzFCSixNQUFBQSxpQkFBaUIsQ0FBQ0UsSUFBbEIsQ0FBd0IsU0FBUUgsT0FBTyxDQUFDTSxTQUFVLFlBQWxEO0FBQ0g7O0FBQ0QsUUFBSU4sT0FBTyxDQUFDTyxlQUFaLEVBQTZCO0FBQ3pCTixNQUFBQSxpQkFBaUIsR0FBR0EsaUJBQWlCLENBQUNPLE1BQWxCLENBQXlCUixPQUFPLENBQUNTLFNBQWpDLENBQXBCO0FBQ0g7O0FBQ0QsUUFBSVQsT0FBTyxDQUFDVSxlQUFaLEVBQTZCO0FBQ3pCVCxNQUFBQSxpQkFBaUIsR0FBR0EsaUJBQWlCLENBQUNPLE1BQWxCLENBQXlCUixPQUFPLENBQUNXLFFBQWpDLENBQXBCO0FBQ0g7O0FBQ0QsUUFBSVgsT0FBTyxDQUFDWSxhQUFSLEtBQTBCLE1BQTlCLEVBQXNDO0FBQ2xDWCxNQUFBQSxpQkFBaUIsQ0FBQ0UsSUFBbEIsQ0FBdUIsWUFBdkI7QUFDSDs7QUFFRCxRQUFJRixpQkFBaUIsQ0FBQ1ksTUFBbEIsR0FBMkIsQ0FBL0IsRUFBa0M7QUFDOUJwQixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQ0FBWixFQUE4Q08saUJBQWlCLENBQUNhLElBQWxCLENBQXVCLE1BQXZCLENBQTlDLEVBRDhCLENBQ2dEOztBQUM5RSxhQUFPLGdDQUFrQmIsaUJBQWxCLEVBQXFDO0FBQUVjLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQXJDLEVBQXlEQyxHQUFELElBQVM7QUFDcEUsWUFBSUEsR0FBSixFQUFTO0FBQ0wsZ0JBQU1BLEdBQU47QUFDSDs7QUFFRHZCLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1FQUFaLEVBTG9FLENBS2E7O0FBQ2pGdUIsUUFBQUEsdUJBQXVCLENBQUNqQixPQUFELENBQXZCO0FBQ0gsT0FQTSxDQUFQO0FBUUg7O0FBRURpQixJQUFBQSx1QkFBdUIsQ0FBQ2pCLE9BQUQsQ0FBdkI7QUFDQWtCLElBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLENBQWI7QUFDSCxHQWhDRDtBQWlDSDs7QUFFRCxTQUFTRix1QkFBVCxDQUFrQ2pCLE9BQWxDLEVBQTJDO0FBQ3ZDLE1BQUlvQixHQUFHLEdBQUdDLFlBQUdDLFlBQUgsQ0FBZ0JDLGNBQUtULElBQUwsQ0FBVVUsU0FBVixFQUFxQiw4QkFBckIsQ0FBaEIsRUFBc0UsTUFBdEUsQ0FBVjs7QUFDQSxNQUFJQyxXQUFXLEdBQUdDLGFBQUlDLE1BQUosQ0FBV1AsR0FBWCxFQUFnQjtBQUFFcEIsSUFBQUE7QUFBRixHQUFoQixDQUFsQjs7QUFDQXFCLGNBQUdPLGFBQUgsQ0FBaUJMLGNBQUtULElBQUwsQ0FBVUksT0FBTyxDQUFDVyxHQUFSLEVBQVYsRUFBeUIsY0FBekIsQ0FBakIsRUFBMkRKLFdBQTNEOztBQUNBaEMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlvQyxxQ0FBWixFQUp1QyxDQUlJO0FBQzlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IGVqcyBmcm9tICdlanMnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IGlucXVpcmVyIGZyb20gJ2lucXVpcmVyJ1xuaW1wb3J0IG5wbUluc3RhbGxQYWNrYWdlIGZyb20gJ25wbS1pbnN0YWxsLXBhY2thZ2UnXG5cbmltcG9ydCB7IENPTkZJR19IRUxQRVJfSU5UUk8sIENPTkZJR19IRUxQRVJfU1VDQ0VTU19NRVNTQUdFLCBRVUVTVElPTk5BSVJFIH0gZnJvbSAnLi9jb25maWcnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNldHVwICgpIHtcbiAgICBjb25zb2xlLmxvZyhDT05GSUdfSEVMUEVSX0lOVFJPKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICBpbnF1aXJlci5wcm9tcHQoUVVFU1RJT05OQUlSRSkudGhlbigoYW5zd2VycykgPT4ge1xuICAgICAgICBsZXQgcGFja2FnZXNUb0luc3RhbGwgPSBbXVxuICAgICAgICBpZiAoYW5zd2Vycy5pbnN0YWxsUnVubmVyKSB7XG4gICAgICAgICAgICBwYWNrYWdlc1RvSW5zdGFsbC5wdXNoKGBAd2Rpby8ke2Fuc3dlcnMucnVubmVyfS1ydW5uZXJgKVxuICAgICAgICB9XG4gICAgICAgIGlmIChhbnN3ZXJzLmluc3RhbGxGcmFtZXdvcmspIHtcbiAgICAgICAgICAgIHBhY2thZ2VzVG9JbnN0YWxsLnB1c2goYEB3ZGlvLyR7YW5zd2Vycy5mcmFtZXdvcmt9LWZyYW1ld29ya2ApXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFuc3dlcnMuaW5zdGFsbFJlcG9ydGVyKSB7XG4gICAgICAgICAgICBwYWNrYWdlc1RvSW5zdGFsbCA9IHBhY2thZ2VzVG9JbnN0YWxsLmNvbmNhdChhbnN3ZXJzLnJlcG9ydGVycylcbiAgICAgICAgfVxuICAgICAgICBpZiAoYW5zd2Vycy5pbnN0YWxsU2VydmljZXMpIHtcbiAgICAgICAgICAgIHBhY2thZ2VzVG9JbnN0YWxsID0gcGFja2FnZXNUb0luc3RhbGwuY29uY2F0KGFuc3dlcnMuc2VydmljZXMpXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFuc3dlcnMuZXhlY3V0aW9uTW9kZSA9PT0gJ3N5bmMnKSB7XG4gICAgICAgICAgICBwYWNrYWdlc1RvSW5zdGFsbC5wdXNoKCdAd2Rpby9zeW5jJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYWNrYWdlc1RvSW5zdGFsbC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnXFxuSW5zdGFsbGluZyB3ZGlvIHBhY2thZ2VzOlxcbi0nLCBwYWNrYWdlc1RvSW5zdGFsbC5qb2luKCdcXG4tICcpKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgIHJldHVybiBucG1JbnN0YWxsUGFja2FnZShwYWNrYWdlc1RvSW5zdGFsbCwgeyBzYXZlRGV2OiB0cnVlIH0sIChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVyclxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdcXG5QYWNrYWdlcyBpbnN0YWxsZWQgc3VjY2Vzc2Z1bGx5LCBjcmVhdGluZyBjb25maWd1cmF0aW9uIGZpbGUuLi4nKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgICAgICByZW5kZXJDb25maWd1cmF0aW9uRmlsZShhbnN3ZXJzKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJlbmRlckNvbmZpZ3VyYXRpb25GaWxlKGFuc3dlcnMpXG4gICAgICAgIHByb2Nlc3MuZXhpdCgwKVxuICAgIH0pXG59XG5cbmZ1bmN0aW9uIHJlbmRlckNvbmZpZ3VyYXRpb25GaWxlIChhbnN3ZXJzKSB7XG4gICAgbGV0IHRwbCA9IGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnL3RlbXBsYXRlcy93ZGlvLmNvbmYudHBsLmVqcycpLCAndXRmOCcpXG4gICAgbGV0IHJlbmRlcmVkVHBsID0gZWpzLnJlbmRlcih0cGwsIHsgYW5zd2VycyB9KVxuICAgIGZzLndyaXRlRmlsZVN5bmMocGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICd3ZGlvLmNvbmYuanMnKSwgcmVuZGVyZWRUcGwpXG4gICAgY29uc29sZS5sb2coQ09ORklHX0hFTFBFUl9TVUNDRVNTX01FU1NBR0UpIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxufVxuIl19